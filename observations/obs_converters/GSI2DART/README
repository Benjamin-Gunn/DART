
gsi_to_dart.f90: the main program
dart_obs_seq_mod.f90: the DART obs_seq output subroutine
params.f90: same module name as GSI/enkf/params.f90 but with different content. The purpose is to avoid modifying enkf/read*.f90
radinfo.f90: same module name as GSI/radinfo.f90 but with different content. The purpose is to avoid modifying enkf/read*.f90
mpisetup.f90: same module name as GSI/enkf/mpisetup.f90 but with different content. The purpose is to avoid dependency on GSI.

The files that are copied directly from GSI/enkf without modifications
are placed under the directory enkf
   constants.f90
   kinds.F90
   mpi_readobs.f90
   read_diag.f90

The following files had their open() statements modified to read 'BIG_ENDIAN' files
without the need to compile EVERYTHING with the -convert big_endian compiler option:
original: open(iunit,form="unformatted",file=obsfile,iostat=ios)
modifed:  open(iunit,form="unformatted",file=obsfile,iostat=ios,convert='BIG_ENDIAN')

   readconvobs.f90
   readozobs.f90
   readsatobs.f90

DART modifications:
   modified ../../../obs_def/DEFAULT_obs_def_mod.F90
   modified ../../../obs_kind/DEFAULT_obs_kind_mod.F90
   modified ../../../preprocess/preprocess.f90
   Added   ../../../obs_def/obs_def_radiance_mod.f90 which has radiance observation types


For the Intel compiler you may need to add the compile flag "-nostdinc"
to avoid inserting the standard C include files which have incompatible
comment characters for fortran.  Do this in the work/mkmf_gsi_to_dart file
by adding it to the "-c" string contents. (This was NOT needed for IFORT 19.0.5.281)


ISSUES:

1) Radiance and surface pressure bias correction
2) Surface pressure altimeter adjustment?
3) Specific humidity obs are transformed to relative humidity.  What to do? [Just run EnSRF with psuedo_rh=.false. and assimilate RH obs]
4) DART must use W and PH as control variables [okay, EnSRF can do this too (nvars=6 for WRF-ARW)]
5) Does DART not do vertical localization for surface obs?

     ! If which_vert has no vertical definition for either location do only horizontal
     if(loc1%which_vert == VERTISUNDEF .or. loc2%which_vert == VERTISUNDEF) comp_h_only = .true.
     ! If both verts are surface, do only horizontal
     if(loc1%which_vert == VERTISSURFACE .and. loc2%which_vert == VERTISSURFACE) comp_h_only = .true.


RUNNING WITH 32 BIT REALS:

   This requires changes in two places:
   1) DART/assimilation_code/modules/utilities/types_mod.f90   change required:  r8 = r4
   2) work/mkmf_gsi_to_dart                                    change required:  -D_REAL4_

   If these are not set in a compatible fashion, you will fail to compile with the following error (or something similar):

../../../../observations/obs_converters/GSI2DART/dart_obs_seq_mod.f90(213): error #6284:
   There is no matching specific function for this generic function reference.   [SET_LOCATION]
      location = set_location(lon, lat, vloc, which_vert)
-----------------^

