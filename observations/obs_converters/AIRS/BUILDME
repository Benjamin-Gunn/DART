#!/bin/sh
# 
# updated  5 Aug 2020

echo 
echo  'The converters require HDF-EOS libraries.'
echo  'The HDF-EOS requirement has been a problem. The short of it is that we have HDF-EOS5'
echo  'installed on the supercomputers, but none of the others. It is also available via'
echo  'MacPorts (hdfeos5). Consequently, I have used the HDF-EOS5 interfaces.'
echo 
echo  'If the he5_hdfeos libraries are installed on your system, you are in luck.'
echo  'On our system, it has been useful to define variables like:'
echo 
echo  'setenv("NCAR_INC_HDFEOS5",    "/glade/u/apps/ch/opt/hdf-eos5/5.1.16/intel/19.0.5/include")'
echo  'setenv("NCAR_LDFLAGS_HDFEOS5","/glade/u/apps/ch/opt/hdf-eos5/5.1.16/intel/19.0.5/lib")'
echo  'setenv("NCAR_LIBS_HDFEOS5","-Wl,-Bstatic -lGctp -lhe5_hdfeos -lsz -lz -Wl,-Bdynamic")'
echo  'which we then use in mkmf_convert_airs_L2'
echo 
echo  'If you need to build the HDF-EOS5 libraries, you may try to follow the steps'
echo  'outlined in this script. They are quite old, and need to be updated to install'
echo  'HDF-EOS5 instead of HDF-EOS2. You will have to edit this script, first, by'
echo  'removing the early exit ...'
echo

# exit

# ------------------------------------------------------------------------------
##
## It has been very difficult to find the download site for _any_ of the HDF-EOS5 
## versions. One dogged individual found that if you _knew_ the full URL, you could
## download it:
## https://observer.gsfc.nasa.gov/ftp/edhs/hdfeos5/latest_release/HDF-EOS5.1.16.tar.Z 
##
## All attempts to use ftp met with failure (some information has been obfuscated):
##
##    0[405] cheyenne2:~/src > ftp edhs1.gsfc.nasa.gov
##    Wrapper for lftp to simulate compatibility with lukemftp
##    Name (xxxxx): anonymous
##    Password:                                   
##    lftp anonymous@edhs1.gsfc.nasa.gov:~> cd /edhs/hdfeos/latest_release
##    ---- Connecting to edhs1.gsfc.nasa.gov (xxxx:xxx:xxx:xxx::xxx) port xx
##    **** connect(control_sock): Network is unreachable
##    cd: Fatal error: max-retries exceeded (Network is unreachable)
##    lftp anonymous@edhs1.gsfc.nasa.gov:~> mget /edhs/hdfeos/latest_release/HDF-EOS5.1.16.tar.Z 
##    ---- Connecting to edhs1.gsfc.nasa.gov (xxx.xxx.xxx.xx) port xx
##    `/edhs/hdfeos/latest_release/HDF-EOS5.1.16.tar.Z' at 0 [Connecting...]
##    **** Timeout - reconnecting                                             
##    mget: /edhs/hdfeos/latest_release/HDF-EOS5.1.16.tar.Z: Fatal error: max-retries exceeded
##
# ------------------------------------------------------------------------------

# nsc 11 mar 2013
# updated 16 jul 2018
#
# change this to true to try the ftp
# to download a new version.  this may have
# moved locations - i haven't verified it recently.

if ( `false` ); then
  # get the files.  i got this by:
   
  ftp edhs1.gsfc.nasa.gov
  # (log in as 'anonymous' and your email as the password)
  cd /edhs/hdfeos/latest_release
  mget * # select a for all
  quit
   
  # mar 2013, the dir contents:
  # 
  # HDF-EOS2.20v1.00.tar.Z
  # HDF-EOS2.20v1.00_TestDriver.tar.Z
  # HDF-EOS_REF.pdf
  # HDF-EOS_UG.pdf
  # hdf-4.2.13.tar.gz
  # jpegsrc.v9b.tar.gz
  # zlib-1.2.11.tar.gz
  # 
  # (i skipped a 'windows' dir).
  # 
  
  for i in *.tar.gz
  do
    tar -zxvf $i
  done
fi

# 
# start with smaller libs, work up to HDF-EOS.
# 

# this is probably appropriate for a mac osx system.
# set it to your home or work directory on cheyenne.

# BASEDIR=/Users/$USER
BASEDIR=/glade/u/home/$USER

# make the target install dirs
mkdir -p ${BASEDIR}/eos/{lib,bin,include,man,man/man1,share} 

echo ''
echo '======================================================================'
if [ -f ${BASEDIR}/eos/lib/libz.a ]; then
   echo 'zlib already exists - no need to build.'
else
   echo 'building zlib at '`date`
   cd zlib-1.2.11 || exit 1
   ./configure --prefix=${BASEDIR}/eos || exit 1
   make clean     || exit 1
   make           || exit 1
   make test      || exit 1
   make install   || exit 1
   cd ..
fi

echo ''
echo '======================================================================'
if [ -f ${BASEDIR}/eos/lib/libjpeg.a ]; then
   echo 'jpeg already exists - no need to build.'
else
   echo 'buiding jpeg at '`date`
   cd jpeg-9b        || exit 2
   ./configure --prefix=${BASEDIR}/eos --libdir=${BASEDIR}/eos/lib || exit 2
   make clean        || exit 2
   make              || exit 2
   make test         || exit 2
   make install      || exit 2
#  make install-lib  || exit 2
   cd ..
fi
 
echo ''
echo '======================================================================'
if [ -f ${BASEDIR}/eos/lib/libmfhdf.a ]; then
   echo 'hdf4 already exists - no need to build.'
else
   echo 'building hdf4 at '`date`
   # (there is apparently no 'make test')
   
   cd hdf-4.2.13 || exit 3
   ./configure --prefix=${BASEDIR}/eos --with-zlib=${BASEDIR}/eos \
                                       --with-jpeg=${BASEDIR}/eos || exit 3
   make clean    || exit 3
   make          || exit 3
   make install  || exit 3
   cd ..
fi
  
echo ''
echo '======================================================================'
if [ -f ${BASEDIR}/eos/lib/libhdfeos.a ]; then
   echo 'hdf-eos already exists - no need to build.'
else
   echo 'building hdf-eos at '`date`
   cd hdfeos    || exit 4
   # (the CC= is crucial)
   # ./configure CC='gfortran -Df2cFortran' --prefix=${BASEDIR}/eos \
   ./configure --prefix=${BASEDIR}/eos \
               --with-zlib=${BASEDIR}/eos \
               --with-jpeg=${BASEDIR}/eos \
               --with-hdf=${BASEDIR}/eos || exit 4
   make clean   || exit 4
   make         || exit 4
   make install || exit 4
   cd ..
fi

echo ''
echo '======================================================================'
if [ -f ${BASEDIR}/eos/lib/LIBJPEG.a ]; then
   echo 'hdf5 already exists - no need to build.'
else
   echo 'building hdf5 at '`date`
   ## (there is apparently no 'make test')
   # 
   # cd hdf5-1.10.1 || exit 5
   # ./configure --prefix=${BASEDIR}/eos --with-zlib=${BASEDIR}/eos \
   #                                     --with-jpeg=${BASEDIR}/eos || exit 5
   # make clean     || exit 5
   # make           || exit 5
   # make install   || exit 5
   # cd ..
fi
   
echo exiting early
exit 0

echo AIRS converter:

cd $DART/observations/obs_converters/AIRS/work

echo 'edit mkmf_convert_airs_L2 to have all the base paths'
echo 'be ${BASEDIR}/eos instead of whatever.  make it look like:'
echo ' '
echo 'set JPGDIR = ${BASEDIR}/eos'
echo 'set HDFDIR = ${BASEDIR}/eos'
echo 'set EOSDIR = ${BASEDIR}/eos'
echo ' '

./quickbuild.csh

exit 0
