# Example HydroDart Experiment Config file.
#
# Purpose: collect ALL relevant information to a HydroDart experiment.
#
# There are top-level keys for differen phases of the experiment setup
# and run.
# Build Phase: dart and wrf_hydro.
# Experiment setup phase: experiment.
# Ensemble construction phase: ensemble.
# Run Phase: run.


modules:
  # TODO (JLM): The compiler specs for wrf-hydro and dart could be solved from the
  # modules at some later date. 


dart:
  use_existing_build: True
  # Absolute path required
  dart_src: /home/docker/wrf_hydro_dart
  fork:
  commit:
  mkmf_template: mkmf.template.gfortran #_5.4.0_docker
  mpi: True
  build_dir: dart_build
  observations:
    converters: USGS

wrf_hydro:
  use_existing_build: True
  # Absolute path required:
  wrf_hydro_src: /home/docker/wrf_hydro_nwm_public
  fork: 
  commit:
  model_config: NWM
  compiler: gfort
  build_dir: wrf_hydro_build
  # Absolute path required: 
  domain_src: /home/docker/domain
  domain_version: v1.2.1


experiment:
  tag: sixmile_test
  # Location where the experiment is established (small storage, not scratched)
  # Absolute path required
  experiment_dir: /home/docker/dart/experiments/sixmile_test
  experiment_dir_mode: 'w'
  # Location of where filter and the ensemble are run. (large storage, potentially scratched)
  # Absolute path required
  run_dir: /home/docker/dart/runs/sixmile_test
  run_dir_mode: 'w'
  # TODO(JLM): The initial ensemble size controls the number of members?? or not?
  # TODO(JLM): what are the format requirements here?
  # Absolute path required


# ensemble_construction
ensemble:
  # Should the size be taken from the initial_ens or is this allowed
  # as a double check?
  size: 4
  # A python script which constructs the ensemble from a single member
  # specified in the wrf_hydro options.
  constructor: ens_setup_exp_1.py

# How is the initial ensemble created?  
initial_ens:
  path: /home/docker/dart/initial_ens/sixmile_test
  from_filter:
    # Optionally create the inital ensemble from filter perturbation + advance.
    # This will use the same ensemble constructed by set
    create: False
    mode: 'r'
    input_nml:
      filter_nml:
        input_state_file_list:
          # Here, only specify the /path/to/restart file for each. The list file is
          # handled internally.
          restart_file_list.txt:
          # If blank: the restarts in the wrfhydro config/domain are used.
          hydro_file_list.txt:
          # If the param file doesnt exist, it is created using create_param_restart.py
          param_file_list.txt: /home/docker/dart/initial_ens/sixmile_test/hydro_dart_params_init.nc
          create_param_file:
            # To specify the restart file for param_file_list.txt,
            # use out_file below. If does not exist, then create_parameter_restart_file.py
            # is invoked to create the file with the following arguments passed.
            # Should I stash this in path above?
            out_file: /home/docker/dart/initial_ens/sixmile_test/hydro_dart_params_init.nc
            # Defaults to hydro_file_list.txt  
            hydro_rst: 
            restart:
            existing_variables: [qlink1,  qlink1]
            new_variables: [qBucketMult,  qSfcLatRunoffMult]
            values: [1, 5]
        # The output files are in path/member_iii/.
        # output_state_file_list: 'hydro_file_list.txt','param_file_list.txt'
        # perturb_from_single_instance: <forcibly true>
        # num_output_state_members: <should be the ensemble size>
      model_nml:
        model_perturbation_amplitude: 0.5
        perturb_distribution: 'lognormal'
    advance:
      end_time:
      

# The fields under the top level must be listed in dart:observations: above.
observation_preparation:
  USGS:
    input:
    output: 
    window_size_hours:
    input_nml_patches:
      input_nml: 
        gages_list_file:
        input_file:
        #location_file: <should be solved internally>
        verbose:
        obs_fraction_for_error:
        
##################################
    
run_experiment:

  time:
    start_time: 2011-08-26 00:00
    end_time: 2011-08-27 00:00
    # are the two following the same?
    advance_model_hours: 1
    window_size_hours: 1
    submit_all_jobs: False
    
  wrf_hydro_ens_advance:
    nproc: 2
    nnodes: 1
    account: 'NRAL0017'
    walltime: '00:04'
    job_name: 'ens_adv' #_{model_start_time_str}'
              
  perturb_forcing:
    perturb: True
    # Absolute path required
    noise_function: make_some_noise.py

  dart:
    exe: filter
    input_nml_patches:
