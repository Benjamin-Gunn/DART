#!/bin/csh
#
# DART software - Copyright UCAR. This open source software is provided
# by UCAR, "as is", without charge, subject to all terms of use at
# http://www.image.ucar.edu/DAReS/DART/DART_download
#
# DART $Id$
#
# usage: mkmf_model_mod_check [ -mpi | -nompi ]
#
# without any args, builds model_mod_check without mpi libraries, and it will run
# as a normal executable. if -mpi is given, it will be compiled with the mpi
# libraries and can run with multiple cooperating processes.

if ( $#argv > 0 ) then
  if ("$argv[1]" == "-mpi") then
    setenv usingmpi 1
  else if ("$argv[1]" == "-nompi") then
    setenv usingmpi 0
  else
    echo "Unrecognized argument to mkmf_model_mod_check: $argv[1]"
    echo "Usage: mkmf_model_mod_check [ -mpi | -nompi ]"
    echo " default is to generate a Makefile without MPI support."
    exit -1
  endif
else
  setenv usingmpi 0
endif


# make a backup copy of the path_names file, and then use
# sed to make sure it includes either the non-mpi subroutines,
# or the subroutines which really call mpi.
cp -f path_names_model_mod_check path_names_model_mod_check.back

set XTRALIBS_BASE = /Users/hendric

set JPGDIR = ${XTRALIBS_BASE}/eos
set HDFDIR = ${XTRALIBS_BASE}/eos
set EOSDIR = ${XTRALIBS_BASE}/eos
set RTTOV = ${XTRALIBS_BASE}/rttov122


set JPGINC = ${JPGDIR}/include
set JPGLIB = ${JPGDIR}/lib

set HDFINC = ${HDFDIR}/include
set HDFLIB = ${HDFDIR}/lib

set EOSINC = ${EOSDIR}/include
set EOSLIB = ${EOSDIR}/lib

set RTINC = "${RTTOV}/include"
set RTMOD = "${RTTOV}/mod"
set RTLIB = "${RTTOV}/lib"
set RTSRC = "${RTTOV}/src"
set RTLIBS = "-lrttov_main -lrttov_brdf_atlas -lrttov_coef_io -lrttov_emis_atlas -lrttov_mw_scatt -lrttov_mw_scatt_coef -lrttov_other"

# leaving this out for now: rttov_parallel

set MYLIBS = "${RTLIBS} -lhdfeos -lmfhdf -ldf -ljpeg -lz  -lm"

set MYINCDIRS = "-I${RTINC} -I${RTMOD} -I${EOSINC} -I${HDFINC} -I${JPGINC} -I${RTSRC}"
set MYLIBDIRS = "-L${RTLIB} -L${EOSLIB} -L${HDFLIB} -L${JPGLIB}"

# is -cpp compiler specific?  on a mac with a case-insensitive filesystem
# we have to tell it to call cpp to build files with #if and #include lines.

set MYFLAGS = "-cpp ${MYINCDIRS}"

if ( $usingmpi ) then

  echo "Making Makefile with MPI"
  touch using_mpi_for_model_mod_check
  sed -e 's#/null_mpi_util#/mpi_util#' \
      -e 's#/null_win_mod#/no_cray_win_mod#' path_names_model_mod_check.back >! path_names_model_mod_check

  setenv wrapper_arg -w

else

  echo "Making Makefile without MPI"
  rm -f using_mpi_for_model_mod_check
  sed -e 's#/mpi_util#/null_mpi_util#' \
      -e '\#no_cray_win_mod.f90#d' \
      -e '\#cray_win_mod.f90#d' path_names_model_mod_check.back >! path_names_model_mod_check

  set p=`grep null_win_mod.f90 path_names_model_mod_check | wc -w`
  if ( $p == 0) then
     echo assimilation_code/modules/utilities/null_win_mod.f90 >> path_names_model_mod_check
  endif

  setenv wrapper_arg ""

endif

# remove temp file and now really call mkmf to generate makefile
rm -f path_names_model_mod_check.back

../../../build_templates/mkmf -p model_mod_check -t ../../../build_templates/mkmf.template \
 -o "${MYFLAGS}" -l "${MYFLAGS} ${MYINCDIRS} ${MYLIBDIRS} ${MYLIBS}" \
        -a "../../.." ${wrapper_arg} path_names_model_mod_check

exit $status

# <next few lines under version control, do not edit>
# $URL$
# $Revision$
# $Date$

